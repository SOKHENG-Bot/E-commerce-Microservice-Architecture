"""
This type stub file was generated by pyright.
"""

import asyncio
from asyncio import AbstractEventLoop
from collections.abc import Awaitable, Coroutine
from typing import Any, Optional, TypeVar, Union
from .structs import OffsetAndMetadata, TopicPartition

__all__ = ["create_task", "create_future", "NO_EXTENSIONS", "INTEGER_MAX_VALUE", "INTEGER_MIN_VALUE"]
T = TypeVar("T")
def create_task(coro: Coroutine[Any, Any, T]) -> asyncio.Task[T]:
    ...

def create_future(loop: Optional[AbstractEventLoop] = ...) -> asyncio.Future[T]:
    ...

async def wait_for(fut: Awaitable[T], timeout: Union[None, int, float] = ...) -> T:
    ...

def parse_kafka_version(api_version: str) -> tuple[int, int, int]:
    ...

def commit_structure_validate(offsets: dict[TopicPartition, Union[int, tuple[int, str], OffsetAndMetadata]]) -> dict[TopicPartition, OffsetAndMetadata]:
    ...

def get_running_loop() -> asyncio.AbstractEventLoop:
    ...

NO_EXTENSIONS = ...
INTEGER_MAX_VALUE = ...
INTEGER_MIN_VALUE = ...
