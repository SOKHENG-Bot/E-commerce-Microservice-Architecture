"""
This type stub file was generated by pyright.
"""

class Ganalytics:
    """Allows you to enable tracking provided by Google Analytics."""
    def __init__(self, enable=..., utm_source=..., utm_medium=..., utm_term=..., utm_content=..., utm_campaign=...) -> None:
        """Create a GAnalytics to enable, customize Google Analytics tracking.

        :param enable: If this setting is enabled.
        :type enable: boolean, optional
        :param utm_source: Name of the referrer source.
        :type utm_source: string, optional
        :param utm_medium: Name of the marketing medium (e.g. "Email").
        :type utm_medium: string, optional
        :param utm_term: Used to identify paid keywords.
        :type utm_term: string, optional
        :param utm_content: Used to differentiate your campaign from ads.
        :type utm_content: string, optional
        :param utm_campaign: The name of the campaign.
        :type utm_campaign: string, optional
        """
        ...
    
    @property
    def enable(self): # -> None:
        """Indicates if this setting is enabled.

        :rtype: boolean
        """
        ...
    
    @enable.setter
    def enable(self, value): # -> None:
        """Indicates if this setting is enabled.

        :param value: Indicates if this setting is enabled.
        :type value: boolean
        """
        ...
    
    @property
    def utm_source(self): # -> None:
        """Name of the referrer source.
        e.g. Google, SomeDomain.com, or Marketing Email

        :rtype: string
        """
        ...
    
    @utm_source.setter
    def utm_source(self, value): # -> None:
        """Name of the referrer source.
        e.g. Google, SomeDomain.com, or Marketing Email

        :param value: Name of the referrer source.
        e.g. Google, SomeDomain.com, or Marketing Email
        :type value: string
        """
        ...
    
    @property
    def utm_medium(self): # -> None:
        """Name of the marketing medium (e.g. Email).

        :rtype: string
        """
        ...
    
    @utm_medium.setter
    def utm_medium(self, value): # -> None:
        """Name of the marketing medium (e.g. Email).

        :param value: Name of the marketing medium (e.g. Email).
        :type value: string
        """
        ...
    
    @property
    def utm_term(self): # -> None:
        """Used to identify any paid keywords.

        :rtype: string
        """
        ...
    
    @utm_term.setter
    def utm_term(self, value): # -> None:
        """Used to identify any paid keywords.

        :param value: Used to identify any paid keywords.
        :type value: string
        """
        ...
    
    @property
    def utm_content(self): # -> None:
        """Used to differentiate your campaign from advertisements.

        :rtype: string
        """
        ...
    
    @utm_content.setter
    def utm_content(self, value): # -> None:
        """Used to differentiate your campaign from advertisements.

        :param value: Used to differentiate your campaign from advertisements.
        :type value: string
        """
        ...
    
    @property
    def utm_campaign(self): # -> None:
        """The name of the campaign.

        :rtype: string
        """
        ...
    
    @utm_campaign.setter
    def utm_campaign(self, value): # -> None:
        """The name of the campaign.

        :param value: The name of the campaign.
        :type value: string
        """
        ...
    
    def get(self): # -> dict[Any, Any]:
        """
        Get a JSON-ready representation of this Ganalytics.

        :returns: This Ganalytics, ready for use in a request body.
        :rtype: dict
        """
        ...
    


