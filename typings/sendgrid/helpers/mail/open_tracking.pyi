"""
This type stub file was generated by pyright.
"""

class OpenTracking:
    """
    Allows you to track whether the email was opened or not, by including a
    single pixel image in the body of the content. When the pixel is loaded,
    we log that the email was opened.
    """
    def __init__(self, enable=..., substitution_tag=...) -> None:
        """Create an OpenTracking to track when your email is opened.

        :param enable: If open tracking is enabled.
        :type enable: boolean, optional
        :param substitution_tag: Tag in body to be replaced by tracking pixel.
        :type substitution_tag: OpenTrackingSubstitionTag, optional
        """
        ...
    
    @property
    def enable(self): # -> None:
        """Indicates if this setting is enabled.

        :rtype: boolean
        """
        ...
    
    @enable.setter
    def enable(self, value): # -> None:
        """Indicates if this setting is enabled.

        :param value: Indicates if this setting is enabled.
        :type value: boolean
        """
        ...
    
    @property
    def substitution_tag(self): # -> None:
        """Allows you to specify a substitution tag that you can insert in the
        body of your email at a location that you desire. This tag will be
        replaced by the open tracking pixel.

        :rtype: string
        """
        ...
    
    @substitution_tag.setter
    def substitution_tag(self, value): # -> None:
        """Allows you to specify a substitution tag that you can insert in the
        body of your email at a location that you desire. This tag will be
        replaced by the open tracking pixel.

        :param value: Allows you to specify a substitution tag that you can
                      insert in the body of your email at a location that you
                      desire. This tag will be replaced by the open tracking
                      pixel.

        :type value: string
        """
        ...
    
    def get(self): # -> dict[Any, Any]:
        """
        Get a JSON-ready representation of this OpenTracking.

        :returns: This OpenTracking, ready for use in a request body.
        :rtype: dict
        """
        ...
    


