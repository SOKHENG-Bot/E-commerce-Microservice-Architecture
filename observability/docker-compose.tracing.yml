
version: '3.8'

services:
  # Jaeger All-in-One (for development/testing)
  jaeger-all-in-one:
    image: jaegertracing/all-in-one:1.50
    container_name: ecommerce_jaeger
    ports:
      - "16686:16686"    # Jaeger UI
      - "14268:14268"    # HTTP collector
      - "14250:14250"    # gRPC collector  
      - "6831:6831/udp"  # UDP agent
      - "6832:6832/udp"  # UDP agent
      - "5778:5778"      # HTTP agent
    environment:
      - COLLECTOR_ZIPKIN_HOST_PORT=:9411
      - COLLECTOR_OTLP_ENABLED=true
    networks:
      - tracing-network

  # OpenTelemetry Collector (optional - for advanced setups)
  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.86.0
    container_name: ecommerce_otel_collector
    command: ["--config=/etc/otel-collector-config.yml"]
    volumes:
      - ./tracing-config/otel-collector-config.yml:/etc/otel-collector-config.yml
    ports:
      - "8888:8888"      # Prometheus metrics
      - "8889:8889"      # Prometheus exporter
      - "13133:13133"    # Health check
      - "4317:4317"      # OTLP gRPC receiver
      - "4318:4318"      # OTLP HTTP receiver
      - "9464:9464"      # Prometheus receiver
    depends_on:
      - jaeger-all-in-one
    networks:
      - tracing-network

  # Prometheus for metrics (integrates with tracing)
  prometheus:
    image: prom/prometheus:v2.47.0
    container_name: ecommerce_prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./tracing-config/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - tracing-network

  # Grafana for metrics visualization
  grafana:
    image: grafana/grafana:10.1.0
    container_name: ecommerce_grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./tracing-config/grafana/datasources:/etc/grafana/provisioning/datasources
      - ./tracing-config/grafana/dashboards:/etc/grafana/provisioning/dashboards
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
    networks:
      - tracing-network

volumes:
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  tracing-network:
    driver: bridge
